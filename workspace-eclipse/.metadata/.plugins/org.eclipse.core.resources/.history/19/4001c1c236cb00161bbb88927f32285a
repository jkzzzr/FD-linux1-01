package SplitCollection;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.Map.Entry;

import javax.xml.crypto.Data;

import splitCollection.SplitCollection;

import java.util.StringTokenizer;

public class splitCollection {
	public static void main(String[]args) throws Exception{
		String inputPath = "/home/Lee/data/test/aaa";
		String outputPath = "/home/Lee/data/test/aa-result";
		HashMap<String, Data_doc_uri_index> hMap = new splitCollection().split(inputPath);
		/*for (Entry<String, Data_doc_uri_index> data:hMap.entrySet()){
			System.out.println(data.getKey()+"\t"+((Data_doc_uri_index)data.getValue()).getUri());
		}*/
		new splitCollection().write(outputPath, hMap);
		
	}
	
	public HashMap<String, Data_doc_uri_index> split(String input) throws Exception{
		HashMap<String, Data_doc_uri_index> result = new HashMap<>();
		BufferedReader bReader = new BufferedReader(new FileReader(input));
		String line = "";
		while ((line = bReader.readLine())!=null){
			Data_doc_uri_index data = splitWord(line);
			result.put(data.getUri(), data);
		}
		bReader.close();
		return result;
	}
	public Data_doc_uri_index splitWord(String line) throws Exception{
		StringTokenizer stringTokenizer = new StringTokenizer(line);
		String[] strings = new String[stringTokenizer.countTokens()];
		int index = 0;
		while (stringTokenizer.hasMoreTokens()){
			strings[index++] = stringTokenizer.nextToken();
		}
		Data_doc_uri_index data = new Data_doc_uri_index();
		data.setDocid(strings[0]);
		data.setUri(extract(strings[1]));
		data.setIndex(Long.parseLong(strings[strings.length-1]));
		return data;
	}
	public String extract(String uri) throws URISyntaxException{
	//	System.out.println(uri.length()>65?uri.toCharArray()[65]:"");
	//	uri = uri.contains("{")?uri.substring(0,uri.indexOf('{')):uri;
		System.out.println(uri);
		URI uri2 = null;
		try{
			uri2 = new URI(uri);
		}catch (Exception e) {
			System.out.println(e.getMessage());
			uri = uri.substring(
					"Illegal character in path at index ".length(),
					uri.indexOf(":"));
			System.exit(1);
		}
		String hostname = uri2.getHost();
		System.err.println(hostname);
		return hostname;
	}
	public void write(String outputPath, HashMap<String, Data_doc_uri_index> hMap) throws Exception{
		BufferedWriter bWriter = new BufferedWriter(new FileWriter(""));
		for (Entry<String, Data_doc_uri_index> data:hMap.entrySet()){
			bWriter.write(data.getKey()+"\t"+((Data_doc_uri_index)data.getValue()).getUri()+"\n");
		}
		bWriter.flush();
		bWriter.close();
		
	}
}

